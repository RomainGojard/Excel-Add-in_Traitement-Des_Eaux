{"version":3,"file":"popup.js","mappings":";4QACA,ijNAUA,SAASA,IACP,IAAMC,EAAWC,SAASC,eAAe,YAAYC,MACrDC,OAAOC,QAAQC,GAAGC,cAAcP,EAClC,CAGuB,aAhBvB,MAuBC,OAvBD,EAgBuB,UAAvB,WAAwBQ,GAAQ,0FAEtBA,IAAU,sDAGhBC,QAAQC,MAAM,EAAD,IAAQ,uDALF,EAhBvB,8KAuBC,wBAjBDN,OAAOO,SAAQ,SAACC,GACdC,SAASX,eAAe,aAAaY,QAAU,kBAQjD,SACwB,GAAD,+BATgCC,CAAShB,EAAuB,CACvF","sources":["webpack://office-addin-taskpane-js/./src/dialogs/popup.js"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n\nOffice.onReady((info) => {\n  document.getElementById(\"ok-button\").onclick = () => tryCatch(sendStringToParentPage);\n});\n\nfunction sendStringToParentPage() {\n  const userName = Document.getElementById(\"name-box\").value;\n  Office.context.ui.messageParent(userName);\n}\n\n/** Default helper for invoking an action and handling errors. */\nasync function tryCatch(callback) {\n  try {\n    await callback();\n  } catch (error) {\n    // Note: In a production add-in, you'd want to notify the user through your add-in's UI.\n    Console.error(error);\n  }\n}\n\nfunction getSheetNames() {\n  const sheets = Excel.Sheets;\n  const sheetNames = [];\n  for (let i = 0; i < sheets.count; i++) {\n    sheetNames.push(sheets.getItemAt(i).name);\n  }\n  return sheetNames;\n}\n"],"names":["sendStringToParentPage","userName","Document","getElementById","value","Office","context","ui","messageParent","callback","Console","error","onReady","info","document","onclick","tryCatch"],"sourceRoot":""}